services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test-db
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d test-db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  migrations:
    build: ../.
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POETRY_VIRTUALENVS_CREATE: false
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      DB_USER: user
      DB_PASS: password
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: test-db
    command: poetry run alembic upgrade head

  api:
    build:
      context: ../.
      dockerfile: Dockerfile
    container_name: fastapi-app
    depends_on:
      migrations:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    environment:
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      MODE: DEV
      DB_USER: user
      DB_PASS: password
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: test-db
      API_KEY: 5252
    ports:
      - "8000:8000"

volumes:
  db-data:
    driver: local